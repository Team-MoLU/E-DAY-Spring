name: spring CICD

on:
  push:
    branches: [ 'develop' ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker image
        run: |
          docker build -t spring-app .
        
      - name: Save Docker image
        run: |
          docker save spring-app -o spring-app.tar
        
      - name: Upload Docker image
        uses: actions/upload-artifact@v2
        with:
          name: spring-app
          path: spring-app.tar
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Download Docker image
      uses: actions/download-artifact@v2
      with:
        name: spring-app
        
    - name: Load Docker image
      run: |
        docker load -i spring-app.tar
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: www.eday.site
        username: ubuntu
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          if [ "$(docker ps -q -f name=spring-container)" ]; then
            docker stop spring-container
            docker rm spring-container
          fi
          
          docker run -d â€”name spring-container -p 80:8080 spring-app
